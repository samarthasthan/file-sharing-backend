name: storage_project
services:
  # Kafka
  kafka:
    build:
      context: ../dockerfile/kafka
      dockerfile: ./Dockerfile
    container_name: kafka
    ports:
      - ${KAFKA_EXTERNAL_PORT}:9092
    networks:
      - storage_project
    healthcheck:
      test:
        ["CMD-SHELL", "./wait-for.sh kafka:${KAFKA_PORT} -- ./kafka_setup.sh"]
      interval: 10s
      timeout: 10s
      retries: 100
      start_period: 10s


  # Database
  user-db:
    image: postgres:17rc1-alpine3.19
    container_name: user-db
    networks:
      - storage_project
    ports:
      - "${USER_DB_PORT}:5432"
    environment:
      - POSTGRES_USER=${USER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${USER_POSTGRES_PASSWORD}
      - POSTGRES_DB=${USER_POSTGRES_DB}
    volumes:
      - ../../.data/userdb:/var/lib/postgresql/data

  # S3 Compatible Storage
  minio:
    image: bitnami/minio:latest
    container_name: trademarkia-minio
    networks:
      - storage_project
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_WEB_PORT}:9001"
    environment:
      - MINIO_FORCE_NEW_KEYS=yes
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_DEFAULT_BUCKETS=${MINIO_DEFAULT_BUCKETS}
    volumes:
      - ../../.data/minio:/data

  # Metrics, Logging and Tracing
  loki:
    image: grafana/loki
    container_name: trademarkia-loki
    networks:
      - storage_project
    ports:
      - "${GRAFANA_LOKI_PORT}:3100"

  grafana:
    image: grafana/grafana-oss
    container_name: trademarkia-grafana
    networks:
      - storage_project
    ports:
      - "${GRAFANA_PORT}:3000"
    depends_on:
      - loki
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_ADMIN_USER=samarth
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ../../config/grafana:/etc/grafana/provisioning
      - ../../config/grafana/dashboards:/var/lib/grafana/dashboards

  prometheus:
    image: prom/prometheus
    container_name: trademarkia-prometheus
    networks:
      - storage_project
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - ${PROMETHEUS_PORT}:9090
    restart: unless-stopped
    volumes:
      - ../../config/prometheus:/etc/prometheus

  zipkin:
    image: openzipkin/zipkin
    container_name: trademarkia-zipkin
    networks:
      - storage_project
    ports:
      - "${ZIPKIN_PORT}:9411"


networks:
  storage_project:
    driver: bridge